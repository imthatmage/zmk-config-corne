/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        enter {
            bindings = <&kp ENTER>;
            key-positions = <33 32>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <2 3>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <26 27>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <9 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE         &kp Q  &kp W  &kp E         &kp R     &kp T        &kp Y           &kp U  &kp I      &kp O    &kp P     &kp LBKT
&sk LEFT_CONTROL  &kp A  &kp S  &kp D         &kp F     &kp G        &kp H           &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&trans            &kp Z  &kp X  &kp C         &kp V     &kp B        &kp N           &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RBKT
                                &sk LEFT_ALT  &sk LCMD  &kp SPACE    &sk LEFT_SHIFT  &to 1  &to 4
            >;
        };

        sym1 {
            bindings = <
&trans  &kp ESCAPE  &kp UNDERSCORE  &kp UP           &kp PLUS   &kp LBKT                &kp RBKT               &kp N7  &kp N8  &kp N9  &kp PAGE_UP    &trans
&trans  &kp TAB     &kp LEFT        &kp DOWN         &kp RIGHT  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp N4  &kp N5  &kp N6  &kp PAGE_DOWN  &trans
&trans  &kp TILDE   &kp MINUS       &kp KP_MULTIPLY  &kp EQUAL  &kp LEFT_BRACE          &kp RIGHT_BRACE        &kp N1  &kp N2  &kp N3  &to 3          &trans
                                    &kp COMMA        &to 0      &kp SPACE               &kp DOT                &to 2   &kp N0
            >;
        };

        sym2 {
            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTRK  &kp APOSTROPHE  &kp DOUBLE_QUOTES  &trans
&trans  &trans    &trans  &trans    &trans      &trans       &trans     &trans    &trans     &trans          &trans             &trans
&trans  &trans    &trans  &trans    &trans      &trans       &trans     &trans    &trans     &trans          &trans             &trans
                          &trans    &to 0       &trans       &trans     &trans    &trans
            >;
        };

        func {
            bindings = <
&bt BT_SEL 0  &kp ESC     &kp C_PAUSE  &kp C_PREVIOUS        &kp C_NEXT            &trans          &kp F1          &kp F2   &kp F3  &kp F4  &kp F5   &kp C_RESET
&bt BT_SEL 1  &kp TAB     &trans       &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &trans          &kp F6          &kp F7   &kp F8  &kp F9  &kp F10  &trans
&bt BT_SEL 2  &bt BT_CLR  &kp PERIOD   &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans          &kp F11         &kp F12  &trans  &trans  &trans   &trans
                                       &trans                &to 0                 &sk LEFT_ALT    &sk LEFT_SHIFT  &to 2    &trans
            >;
        };
        win_nav {
            bindings = <
&trans  &trans  &kp LA(NUMBER_7)  &kp LA(NUMBER_8)  &kp LA(NUMBER_9)  &trans    &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LA(NUMBER_4)  &kp LA(NUMBER_5)  &kp LA(NUMBER_6)  &trans    &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LA(NUMBER_1)  &kp LA(NUMBER_2)  &kp LA(NUMBER_3)  &trans    &trans          &trans  &trans  &trans  &trans  &trans
                                  &kp LA(N0)        &to 0             &trans    &sk LEFT_SHIFT  &trans  &trans
            >;
        };
    };
};
